buildscript {
    repositories {
        jcenter()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2"
        classpath "org.ysb33r.gradle:gradletest:0.5.4"
    }
}
apply plugin: 'codenarc'
apply plugin: 'groovy'
apply plugin: 'maven'
apply from: 'gradle/integration-test.gradle'
apply from: 'gradle/releasing.gradle'

group = 'com.github.jruby-gradle'
version = '0.2.0'
defaultTasks 'check', 'assemble'

repositories {
    jcenter()
}

dependencies {
    compile new GradleDist(project, '2.0').asFileTree

    ['jruby-gradle-plugin', 'jruby-gradle-jar-plugin'].each { String plugin ->
        String pluginDependency = "com.github.jruby-gradle:${plugin}:${jrubyGradleMinVersion}"
        compile pluginDependency
        gradleTest pluginDependency
    }

    testCompile ("org.spockframework:spock-core:0.7-groovy-${gradle.gradleVersion.startsWith('1.')?'1.8':'2.0'}") {
        exclude module : 'groovy-all'
    }
}

plugins.withType(JavaPlugin) {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    project.tasks.withType(JavaCompile) { task ->
        task.sourceCompatibility = project.sourceCompatibility
        task.targetCompatibility = project.targetCompatibility
    }

    project.tasks.withType(GroovyCompile) { task ->
        task.sourceCompatibility = project.sourceCompatibility
        task.targetCompatibility = project.targetCompatibility
    }
}

codenarc {
    sourceSets = [sourceSets.main]
    configFile = file('gradle/codenarc.xml')
}

test {
    testLogging {
        exceptionFormat "full"
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

// vim: ft=groovy
